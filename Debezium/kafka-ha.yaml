---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: kafka-1-data
  name: kafka-1-data
  namespace: kafka-connect
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: rook-cephfs
  volumeMode: Filesystem
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: kafka-2-data
  name: kafka-2-data
  namespace: kafka-connect
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: rook-cephfs
  volumeMode: Filesystem
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: kafka-3-data
  name: kafka-3-data
  namespace: kafka-connect
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: rook-cephfs
  volumeMode: Filesystem
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: kafka-1-logs
  name: kafka-1-logs
  namespace: kafka-connect
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: rook-cephfs
  volumeMode: Filesystem
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: kafka-2-logs
  name: kafka-2-logs
  namespace: kafka-connect
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: rook-cephfs
  volumeMode: Filesystem
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: kafka-3-logs
  name: kafka-3-logs
  namespace: kafka-connect
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: rook-cephfs
  volumeMode: Filesystem
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: kafka-1-config
  name: kafka-1-config
  namespace: kafka-connect
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: rook-cephfs
  volumeMode: Filesystem
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: kafka-2-config
  name: kafka-2-config
  namespace: kafka-connect
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: rook-cephfs
  volumeMode: Filesystem
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: kafka-3-config
  name: kafka-3-config
  namespace: kafka-connect
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: rook-cephfs
  volumeMode: Filesystem
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kafka-1
    component: kafka
  name: kafka-1
  namespace: kafka-connect
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-1
      component: kafka
  strategy: {}
  template:
    metadata:
      labels:
        app: kafka-1
        component: kafka
    spec:
      nodeSelector:
        tier: broker
      containers:
      - image: debezium/kafka:1.2
        imagePullPolicy: IfNotPresent
        name: kafka-1
        env:
        - name: BROKER_ID
          value: "1"
        - name: ZOOKEEPER_CONNECT
          value: "zk-cs:2181"
        - name: HOST_NAME
          value: "kafka-1"
        - name: ADVERTISED_HOST_NAME
          value: "kafka-1-svc"
        - name: HEAP_OPTS
          value: "-Xms1G -Xmx4G"
        - name: CREATE_TOPICS
          value: "connect-configs:1:3:compact,connect-offsets:3:3:compact,connect-status:3:3:compact"
        - name: LOG_LEVEL
          value: "INFO"
        - name: KAFKA_ADVERTISED_HOST_NAME
          value: "kafka-1-svc"
        - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
          value: "true"
        - name: KAFKA_LOG_RETENTION_HOURS
          value: "2"
        - name: KAFKA_LOG_COMPRESSION_TYPE
          value: "gzip"
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
          value: "0"
        - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_LOG_DIRS
          value: "/kafka/logs"
        ports:
        - containerPort: 9092
        resources:
          requests:
            memory: "2Gi"
          limits:
            memory: "4Gi"
        volumeMounts:
        - mountPath: /kafka/data
          name: kafka-1-data
        - mountPath: /kafka/logs
          name: kafka-1-logs
        - mountPath: /kafka/config
          name: kafka-1-config
      volumes:
      - name: kafka-1-data
        persistentVolumeClaim:
          claimName: kafka-1-data
      - name: kafka-1-logs
        persistentVolumeClaim:
          claimName: kafka-1-logs
      - name: kafka-1-config
        persistentVolumeClaim:
          claimName: kafka-1-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kafka-2
    component: kafka
  name: kafka-2
  namespace: kafka-connect
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-2
      component: kafka
  strategy: {}
  template:
    metadata:
      labels:
        app: kafka-2
        component: kafka
    spec:
      nodeSelector:
        tier: broker
      containers:
      - image: debezium/kafka:1.2
        imagePullPolicy: IfNotPresent
        name: kafka-2
        env:
        - name: BROKER_ID
          value: "1"
        - name: ZOOKEEPER_CONNECT
          value: "zk-cs"
        - name: HOST_NAME
          value: "kafka-2"
        - name: ADVERTISED_HOST_NAME
          value: "kafka-2-svc"
        - name: HEAP_OPTS
          value: "-Xms1G -Xmx4G"
        - name: CREATE_TOPICS
          value: "connect-configs:1:3:compact,connect-offsets:3:3:compact,connect-status:3:3:compact"
        - name: LOG_LEVEL
          value: "INFO"
        - name: KAFKA_ADVERTISED_HOST_NAME
          value: "kafka-2-svc"
        - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
          value: "true"
        - name: KAFKA_LOG_RETENTION_HOURS
          value: "2"
        - name: KAFKA_LOG_COMPRESSION_TYPE
          value: "gzip"
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
          value: "0"
        - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_LOG_DIRS
          value: "/kafka/logs"
        ports:
        - containerPort: 9092
        resources:
          requests:
            memory: "2Gi"
          limits:
            memory: "4Gi"
        volumeMounts:
        - mountPath: /kafka/data
          name: kafka-2-data
        - mountPath: /kafka/logs
          name: kafka-2-logs
        - mountPath: /kafka/config
          name: kafka-2-config
      volumes:
      - name: kafka-2-data
        persistentVolumeClaim:
          claimName: kafka-2-data
      - name: kafka-2-logs
        persistentVolumeClaim:
          claimName: kafka-2-logs
      - name: kafka-2-config
        persistentVolumeClaim:
          claimName: kafka-2-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kafka-3
    component: kafka
  name: kafka-3
  namespace: kafka-connect
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-3
      component: kafka
  strategy: {}
  template:
    metadata:
      labels:
        app: kafka-3
        component: kafka
    spec:
      nodeSelector:
        tier: broker
      containers:
      - image: debezium/kafka:1.2
        imagePullPolicy: IfNotPresent
        name: kafka-3
        env:
        - name: BROKER_ID
          value: "1"
        - name: ZOOKEEPER_CONNECT
          value: "zk-cs"
        - name: HOST_NAME
          value: "kafka-3"
        - name: ADVERTISED_HOST_NAME
          value: "kafka-3-svc"
        - name: HEAP_OPTS
          value: "-Xms1G -Xmx4G"
        - name: CREATE_TOPICS
          value: "connect-configs:1:3:compact,connect-offsets:3:3:compact,connect-status:3:3:compact"
        - name: LOG_LEVEL
          value: "INFO"
        - name: KAFKA_ADVERTISED_HOST_NAME
          value: "kafka-3-svc"
        - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
          value: "true"
        - name: KAFKA_LOG_RETENTION_HOURS
          value: "2"
        - name: KAFKA_LOG_COMPRESSION_TYPE
          value: "gzip"
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
          value: "0"
        - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_LOG_DIRS
          value: "/kafka/logs"
        ports:
        - containerPort: 9092
        resources:
          requests:
            memory: "2Gi"
          limits:
            memory: "4Gi"
        volumeMounts:
        - mountPath: /kafka/data
          name: kafka-3-data
        - mountPath: /kafka/logs
          name: kafka-3-logs
        - mountPath: /kafka/config
          name: kafka-3-config
      volumes:
      - name: kafka-3-data
        persistentVolumeClaim:
          claimName: kafka-3-data
      - name: kafka-3-logs
        persistentVolumeClaim:
          claimName: kafka-3-logs
      - name: kafka-3-config
        persistentVolumeClaim:
          claimName: kafka-3-config
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kafka-1
  name: kafka-1-svc
  namespace: kafka-connect
spec:
  ports:
  - name: broker
    port: 9092
    protocol: TCP
    targetPort: 9092
  selector:
    app: kafka-1
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kafka-2
  name: kafka-2-svc
  namespace: kafka-connect
spec:
  ports:
  - name: broker
    port: 9092
    protocol: TCP
    targetPort: 9092
  selector:
    app: kafka-2
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kafka-3
  name: kafka-3-svc
  namespace: kafka-connect
spec:
  ports:
  - name: broker
    port: 9092
    protocol: TCP
    targetPort: 9092
  selector:
    app: kafka-3
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kafka
  name: kafka
  namespace: kafka-connect
spec:
  ports:
  - name: broker
    port: 9092
    protocol: TCP
    targetPort: 9092
  selector:
    component: kafka
  type: ClusterIP