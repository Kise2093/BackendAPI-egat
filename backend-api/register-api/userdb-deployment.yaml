apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert --chart -f docker-compose-mobileregisterapi.yaml
    kompose.version: 1.25.0 (a70f80cc)
  creationTimestamp: null
  labels:
    io.kompose.service: userdb
  name: userdb
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: userdb
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert --chart -f docker-compose-mobileregisterapi.yaml
        kompose.version: 1.25.0 (a70f80cc)
      creationTimestamp: null
      labels:
        io.kompose.network/egat-p2p: "true"
        io.kompose.service: userdb
    spec:
      containers:
        - env:
            - name: MONGO_INITDB_DATABASE
              value: UserDatabase
            - name: MONGO_INITDB_PASSWORD
              value: Passw0rdIKP
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: Passw0rdIKP
            - name: MONGO_INITDB_ROOT_USERNAME
              value: root
            - name: MONGO_INITDB_USERNAME
              value: profileuser
          image: mongo:latest
          name: userdb
          ports:
            - containerPort: 27017
          resources: {}
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d/init-mongo.sh
              name: userdb-claim0
            - mountPath: /data/db
              name: userdb-claim1
      restartPolicy: Always
      volumes:
        - name: userdb-claim0
          persistentVolumeClaim:
            claimName: userdb-claim0
        - name: userdb-claim1
          persistentVolumeClaim:
            claimName: userdb-claim1
status: {}
